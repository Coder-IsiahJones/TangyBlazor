@page "/learnBlazor/demoproduct"

<h3 class="text-primary">Demo Product</h3>
<div class="d-flex gap-3">
	@foreach (var prod in Products)
	{

		<div class="card bg-light mb-3" style="max-width: 18rem;">
			<div class="card-header">Product - @prod.Id</div>
			<div class="card-body">
				<div>
					<label>Name: @prod.Name</label>
				</div>

				<div>
					<label>Show Properties</label>
					<input class="form-check-input" type="checkbox" @bind-value="prod.isActive" checked="@(prod.isActive ? "checked" : null)" />
				</div>

				@if (prod.isActive)
				{
					<hr />
					@foreach (var properties in prod.ProductProperties)
					{
						<p>@properties.Key - @properties.Value</p>
					}
				}
			</div>

			<div class="m-2">
				<EditDeleteButton />
			</div>
		</div>
	}
</div>
@code {
	private bool showProperties;

	List<Demo_Product> Products = new();

	protected override void OnInitialized()
	{
		Products.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				isActive = false,
				Price = 5.99,
				ProductProperties = new()
				{
					new Demo_ProductProperties { Id = 1, Key = "Flavor", Value = "Rose" },
					new Demo_ProductProperties { Id = 2, Key = "Size", Value = "20oz" },
					new Demo_ProductProperties { Id = 3, Key = "Color", Value = "Purple" }
				}
			});

		Products.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				isActive = true,
				Price = 7.99,
				ProductProperties = new()
				{
					new Demo_ProductProperties { Id = 1, Key = "Flavor", Value = "Lily" },
					new Demo_ProductProperties { Id = 2, Key = "Size", Value = "18oz" },
					new Demo_ProductProperties { Id = 3, Key = "Color", Value = "White" }
				}
			});
	}
}
