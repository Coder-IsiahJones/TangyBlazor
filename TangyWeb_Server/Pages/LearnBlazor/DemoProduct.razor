@page "/learnBlazor/demoproduct"

<h3 class="text-primary">Demo Product</h3>
<p>Favorites Total: @SelectedFavoriteCount</p>
<p>Last Selected Product: @LastSelectedProduct</p>

<div class="d-flex gap-3">
	@foreach (var prod in Products)
	{
		<ProductCard Product="@prod" OnFavoriteUpdated="FavoriteCountUpdate" OnLastSelected="GetLastSelectedProduct" />
	}
</div>

@code {
	private bool showProperties;
	private int SelectedFavoriteCount { get; set; } = 0;
	private string LastSelectedProduct { get; set; } = String.Empty;

	List<Demo_Product> Products = new();

	protected override void OnInitialized()
	{
		Products.Add(new()
			{
				Id = 1,
				Name = "Midnight Blaze",
				isActive = false,
				Price = 5.99,
				ProductProperties = new()
				{
					new Demo_ProductProperties { Id = 1, Key = "Flavor", Value = "Rose" },
					new Demo_ProductProperties { Id = 2, Key = "Size", Value = "20oz" },
					new Demo_ProductProperties { Id = 3, Key = "Color", Value = "Purple" }
				}
			});

		Products.Add(new()
			{
				Id = 2,
				Name = "Blossom Lily",
				isActive = true,
				Price = 7.99,
				ProductProperties = new()
				{
					new Demo_ProductProperties { Id = 1, Key = "Flavor", Value = "Lily" },
					new Demo_ProductProperties { Id = 2, Key = "Size", Value = "18oz" },
					new Demo_ProductProperties { Id = 3, Key = "Color", Value = "White" }
				}
			});
	}

	protected void FavoriteCountUpdate(bool isSelected)
	{
		if (isSelected)
		{
			SelectedFavoriteCount++;
		}
		else
		{
			SelectedFavoriteCount--;
		}
	}

	protected void GetLastSelectedProduct(string lastProduct)
	{
		if (!String.IsNullOrWhiteSpace(lastProduct))
		{
			LastSelectedProduct = lastProduct;
		}
		else
		{
			LastSelectedProduct = String.Empty;
		}
	}
}
