<div class="card bg-light mb-3" style="max-width: 18rem;" @onclick="(args) => LastSelectedUpdate(args, Product.Name)">
	<div class="card-header">Product - @Product.Id</div>
	<div class="card-body">
		<div class="pb-3">
			<input class="form-check-input" type="checkbox" @onchange="FavoriteUpdate" />
			<label>Add to Favorite:</label>
		</div>

		<div>
			<label>Name: @Product.Name</label>
		</div>

		<div>
			<label>Show Properties</label>
			<input class="form-check-input" type="checkbox" @bind-value="Product.isActive" checked="@(Product.isActive ? "checked" : null)" />
		</div>

		@if (Product.isActive)
		{
			<hr />
			@foreach (var properties in Product.ProductProperties)
			{
				<p>@properties.Key - @properties.Value</p>
			}
		}
	</div>

	<div class="m-2">
		<EditDeleteButton isActive="@Product.isActive" />
	</div>
</div>

@code {
	[Parameter]
	public Demo_Product Product { get; set; }

	[Parameter]
	public EventCallback<bool> OnFavoriteUpdated { get; set; }

	[Parameter]
	public EventCallback<string> OnLastSelected { get; set; }

	private async Task FavoriteUpdate(ChangeEventArgs e)
	{
		await OnFavoriteUpdated.InvokeAsync((bool)e.Value);
	}

	private async Task LastSelectedUpdate(MouseEventArgs e, String name)
	{
		await OnLastSelected.InvokeAsync(name);
	}
}
